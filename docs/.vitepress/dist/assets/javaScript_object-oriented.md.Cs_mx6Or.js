import{_ as t,c as a,o,j as e,a as n}from"./chunks/framework.C94oF1kp.js";const j=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javaScript/object-oriented.md","filePath":"javaScript/object-oriented.md"}'),r={name:"javaScript/object-oriented.md"},c=e("h3",{id:"面向对象编程-oop",tabindex:"-1"},[n("面向对象编程(OOP) "),e("a",{class:"header-anchor",href:"#面向对象编程-oop","aria-label":'Permalink to "面向对象编程(OOP)"'},"​")],-1),s=e("p",null,"OOP是一种编程范式,基于'对象'来组织代码.对象是由属性(数据)和方法(行为)组成的结构,用于模拟现实世界的实体,OOP的核心原则包括封装,继承,和多态.",-1),i=e("ul",null,[e("li",null,"封装: 将数据和操作数据的方法绑定在一起,限制外部对对象内部的直接访问"),e("li",null,"继承: 通过一个'父对象'创建'子对象',子对象继承父对象的属性和方法"),e("li",null,"多态: 对象可以定义在不同上下文使用的方法,继承关系下子类可以覆盖或者扩展父类的方法")],-1),l=[c,s,i];function d(_,p,h,u,m,O){return o(),a("div",null,l)}const P=t(r,[["render",d]]);export{j as __pageData,P as default};
