import{_ as a,c as t,o as e,a2 as o}from"./chunks/framework.C94oF1kp.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"javaScript/prototype-chain.md","filePath":"javaScript/prototype-chain.md"}'),r={name:"javaScript/prototype-chain.md"},i=o('<h3 id="javascript中的原型以及原型链" tabindex="-1">javaScript中的原型以及原型链 <a class="header-anchor" href="#javascript中的原型以及原型链" aria-label="Permalink to &quot;javaScript中的原型以及原型链&quot;">​</a></h3><h4 id="原型-prototype" tabindex="-1">原型(prototype) <a class="header-anchor" href="#原型-prototype" aria-label="Permalink to &quot;原型(prototype)&quot;">​</a></h4><p>每个 javaScript 对象(除了null) 在创建时 都会关联另外一个对象,这个对象称之为原型.当你试图访问一个对象的属性和方法时,如果在对象本身没有找到,它会沿着原型链向上查找,直到找到该熟悉或到达原型链的末端(即null).</p><ul><li>每一个函数都一个prototype 属性,这是一个对象,包含由改函数创建的对象实例共享的属性和方法.</li><li>每一个对象都有一个内部链接(可以通过__proto__访问),指向它的原型对象.</li></ul><h4 id="原型链-prototype-chain" tabindex="-1">原型链(Prototype Chain) <a class="header-anchor" href="#原型链-prototype-chain" aria-label="Permalink to &quot;原型链(Prototype Chain)&quot;">​</a></h4><p>原型链是由对象及其原型组成的链条.当访问对象的属性时, javaScript 引擎会沿着这个链条逐级向上查找,直到找到目标属性或达到链条的顶端.</p><h4 id="例如" tabindex="-1">例如 <a class="header-anchor" href="#例如" aria-label="Permalink to &quot;例如&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div>',8),p=[i];function c(n,s,l,h,d,_){return e(),t("div",null,p)}const m=a(r,[["render",c]]);export{v as __pageData,m as default};
